{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","length","cat","console","log","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cACzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAaA,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAS,IACpBP,GAAc,SAACQ,GAAD,OAAUN,GAAV,mBAAwBM,OACtCL,EAAe,KAEnBM,QAAQC,IAAI,iBAGZ,SACI,uBACIC,KAAK,OACLC,MAAOV,EACPW,SAjBc,SAACR,GACvBF,EAAcE,EAAES,OAAOF,a,QCJlBG,EAAc,SAAC,GAAqB,EAApBC,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAEpC,OACI,sBAAKC,UAAU,6CAAf,UACI,qBAAKC,IAAMF,EAAMG,IAAMJ,IACvB,4BAAKA,Q,uBCNJK,EAAO,uCAAE,WAAOC,GAAP,uBAAAC,EAAA,6DACZN,EADY,iDACoCO,UAAWF,GAD/C,+DAECG,MAAMR,GAFP,cAEZS,EAFY,gBAGGA,EAAKC,OAHR,uBAGXC,EAHW,EAGXA,KACDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QARxB,kBAWVY,GAXU,4CAAF,sDC0BLK,EAtBC,SAAC,GAAgB,IAAfZ,EAAc,EAAdA,SAEd,ECFwB,SAACA,GACzB,MAA0BtB,mBAAS,CAC/B4B,KAAM,GACNO,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAqBA,OAhBAC,qBAAU,WACPjB,EAAQC,GACPiB,MAAK,SAAAC,GAEFC,YAAW,WACPjC,QAAQC,IAAI+B,GACXH,EAAS,CACLT,KAAMY,EACNL,SAAS,MAEf,QAIP,CAACb,IAEGc,EDpBwBM,CAAapB,GAAhCU,EAAZ,EAAOJ,KAAaO,EAApB,EAAoBA,QAIpB,OACI,qCACI,oBAAIjB,UAAU,wCAAd,SAAuDI,IACtDa,GAAW,mBAAGjB,UAAU,mCAAb,2BACZ,qBAAKA,UAAU,YAAf,SACKc,EAAOF,KAAM,SAACC,GAAD,OACV,cAAC,EAAD,eAEYA,GADCA,EAAIhB,aEStB4B,EAvBM,WAGrB,MAAoC3C,mBAAS,CAAC,gBAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAEA,OACQ,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,uBACI,6BAEQ6C,EAAWd,KAAI,SAACR,GAAD,OACX,cAAC,EAAD,CAEIA,SAAWA,GADJA,Y,MCZvCuB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6e5b1f82.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    const [inputValue, setinputValue] = useState('');\r\n    const handleInputChange = (e) =>{\r\n        setinputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.length > 2 ) {\r\n            setCategories((cat) => [inputValue,...cat]);\r\n            setinputValue ('');\r\n        } \r\n        console.log('Submit hecho');\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange ={ handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n    \r\n\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired \r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    // console.log(id, title, url);\r\n    return (\r\n        <div className=\"card animate__animated animate__bounceInUp\">\r\n            <img src={ url } alt={ title } />\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","\r\nexport const getGifs= async (category) => {\r\n    const url =`https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=rYpXrKTQkx4PE8GRpkucS9kvLmlbOyy4`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url     \r\n        }\r\n    });\r\n    return (gifs);\r\n}\r\n","// import React, { useState , useEffect} from 'react'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\"\r\n\r\nconst GifGrid = ({category}) => {\r\n    // const [images, setImages] = useState([]);\r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n    // getGifs();\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__bounceInUp\">{category}</h3> \r\n            {loading && <p className=\"animate__animated animate__flash\">'Cargando...'</p>} \r\n            <div className=\"card-grid\">\r\n                {images.map ( (img) =>\r\n                    <GifGridItem \r\n                            key={img.id} \r\n                            {...img}\r\n                        /> \r\n                    )}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n\r\n","import { useEffect, useState } from \"react\"\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\n\r\n\r\nexport const useFetchGifs = (category) =>{\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n       getGifs(category)\r\n       .then(imgs => {\r\n           \r\n           setTimeout(() => {\r\n               console.log(imgs);\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n           }, 5);\r\n\r\n       })\r\n\r\n    }, [category])\r\n\r\n    return state; //\r\n\r\n\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () =>{\r\n\r\n// const categories = ['One Punch','Samurai X','Dragon Ball']\r\nconst [categories, setCategories] = useState(['Dragon Ball'])   \r\n\r\nreturn (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories = {setCategories}/>\r\n            <hr />\r\n                <ol>\r\n                    {\r\n                        categories.map((category )=>\r\n                            <GifGrid \r\n                                key = {category}\r\n                                category= {category}\r\n                            />\r\n                        )\r\n                    }\r\n                </ol>\r\n        </>\r\n    )\r\n};\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp'\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}